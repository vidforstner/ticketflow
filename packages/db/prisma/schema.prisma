generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model User {
    id String @id @default(cuid())
    clerkId String @unique
    email String @unique
    ticketHolder TicketHolder[]
    eventRole EventRole[]
}

model Event {
  id             String       @id @default(cuid())
  organisationId String       @unique
  name           String
  slug           String       @unique
  imageUrl       String
  isDeleted      Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  ticketTypes    TicketType[]
  eventRoles     EventRole[]
}

model EventRole {
  id String @id @default(cuid())
  eventId String
  event Event @relation(fields: [eventId], references: [id])
  userId String
  user User @relation(fields: [userId], references: [id])
  role Role
  clerkId String  //no clue if this exists within clerk

  @@index([eventId], name: "eventId")
  @@index([userId], name: "userId")
}

model TicketType {
    id String @id @default(cuid())
    eventId String
    event Event @relation(fields: [eventId], references: [id])
    ticketHolder TicketHolder[]

    @@index([eventId], name: "eventId")    
}

model TicketHolder {
    id String @id @default(cuid())
    ticketTypeId String
    ticketType TicketType @relation(fields: [ticketTypeId], references: [id])
    userId String
    user User @relation(fields: [userId], references: [id])

    @@index([ticketTypeId], name: "ticketTypeId")
    @@index([userId], name: "userId")
}

enum Role {
  OWNER
  SECURITY
  ADMIN
}

