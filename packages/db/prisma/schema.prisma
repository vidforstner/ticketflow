generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model User {
    id             String @id @default(cuid())
    clerkId        String @unique
    firstName      String
    lastName       String
    email          String @unique
    ticketHolder   TicketHolder[]
    eventRole      EventMembership[]
    isDeleted      Boolean @default(false)
    isStaff        Boolean @default(false)
}

model Event {
  id               String       @id @default(cuid())
  organisationId   String       @unique
  name             String
  startDate        DateTime
  endDate          DateTime
  placeId          String
  type             EventType
  slug             String       @unique
  imageUrl         String
  phone            String?
  email            String?
  website          String?
  facebook         String?
  instagram        String?
  youtube          String?
  description      String?
  isDeleted        Boolean      @default(false)
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @default(now())
  isApproved       Boolean      @default(false)
  ticketTypes      TicketType[]
  eventMemberships EventMembership[]
}

model EventMembership {
  id               String @id @default(cuid())
  eventId          String
  event            Event @relation(fields: [eventId], references: [id])
  userId           String
  user             User @relation(fields: [userId], references: [id])
  role             Role
  clerkId          String 

  @@index([eventId], name: "eventId")
  @@index([userId], name: "userId")
}

model TicketType {
    id            String @id @default(cuid())
    name          String
    price         Float
    amount        Int
    startDate     DateTime
    endDate       DateTime
    details       String?
    eventId       String
    event         Event @relation(fields: [eventId], references: [id])
    ticketHolder  TicketHolder[]

    @@index([eventId], name: "eventId")    
}

model TicketHolder {
    id            String @id @default(cuid())
    ticketTypeId  String
    ticketType    TicketType @relation(fields: [ticketTypeId], references: [id])
    userId        String
    user          User @relation(fields: [userId], references: [id])

    @@index([ticketTypeId], name: "ticketTypeId")
    @@index([userId], name: "userId")
}

enum Role {
  OWNER
  SECURITY
  ADMIN
}

enum EventType {
  koncert
  festival
  dj
  zabava
  razstava
  film
  predstava
  stand_up 
  kvizi
  konferenca
  seminar
  kolesarstvo
  kosarka
  paintball
  rafting
  tek_maraton 
  turnirji
  mma
  networking
  delavnica
  ostalo
  privatni_dogodek
}

